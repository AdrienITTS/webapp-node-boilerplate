/**
** Module dependencies.
*/

var app = require('../server');
var debug = require('debug')('WSControl');
var http = require('http');

/*
** Get port from environment
*/
var port;
var port = normalizePort(process.env.PORT || '2508');
app.set('port', port);

/*
** Create HTTP server
*/

var server = http.createServer(app);

/*
** Listen on provided port, on all network intefaces
*/

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/*
** Normalize a port into a number, string, or false
*/

function normalizePort(val) {
    'use strict';
    var port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    } else if (port >= 0) {
        return port;
    } else { return false; }
}

/*
** Event listener for HTTP server "error" event
*/

function onError(error) {
    'use strict';
    if (error.syscall !== 'listen') {
        throw error;
    }
    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    // handle specific listen errors with friendly messages
    switch (error.code) {
    case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
    case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
    default:
        throw error;
    }
}

/*
** Event listener for HTTP server "listening" event
*/

function onListening() {
    'use strict';
    var addr = server.address(), bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
    console.log('Listening on ' + bind);
}